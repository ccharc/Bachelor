)
sconskvart4 = glm(se2conskvart4[,2] ~ time(se2conskvart4[,1]) +
I(time(se2conskvart4[,1])^2) +
sin((8*pi)/8784*I(time(se2conskvart4[,1])))+
cos((8*pi)/8784*I(time(se2conskvart4[,1])))+
sin((24*pi)/8784*I(time(se2conskvart4[,1])))+
cos((24*pi)/8784*I(time(se2conskvart4[,1])))+
sin((104*pi)/8784*I(time(se2conskvart4[,1])))+
cos((104*pi)/8784*I(time(se2conskvart4[,1])))+
sin((732*pi)/8784*I(time(se2conskvart4[,1])))+
cos((732*pi)/8784*I(time(se2conskvart4[,1])))+
sin((17568*pi)/8784*I(time(se2conskvart4[,1])))+
cos((17568*pi)/8784*I(time(se2conskvart4[,1])))
)
### Sæson kvartal price
spricekvart1 = glm(se2pricekvart1[,2] ~ time(se2pricekvart1[,1]) +
I(time(se2pricekvart1[,1])^2) +
sin((8*pi)/8784*I(time(se2pricekvart1[,1])))+
cos((8*pi)/8784*I(time(se2pricekvart1[,1])))+
sin((24*pi)/8784*I(time(se2pricekvart1[,1])))+
cos((24*pi)/8784*I(time(se2pricekvart1[,1])))+
sin((104*pi)/8784*I(time(se2pricekvart1[,1])))+
cos((104*pi)/8784*I(time(se2pricekvart1[,1])))+
sin((732*pi)/8784*I(time(se2pricekvart1[,1])))+
cos((732*pi)/8784*I(time(se2pricekvart1[,1])))+
sin((17568*pi)/8784*I(time(se2pricekvart1[,1])))+
cos((17568*pi)/8784*I(time(se2pricekvart1[,1])))
)
spricekvart2 = glm(se2pricekvart2[,2] ~ time(se2pricekvart2[,1]) +
I(time(se2pricekvart2[,1])^2) +
sin((8*pi)/8784*I(time(se2pricekvart2[,1])))+
cos((8*pi)/8784*I(time(se2pricekvart2[,1])))+
sin((24*pi)/8784*I(time(se2pricekvart2[,1])))+
cos((24*pi)/8784*I(time(se2pricekvart2[,1])))+
sin((104*pi)/8784*I(time(se2pricekvart2[,1])))+
cos((104*pi)/8784*I(time(se2pricekvart2[,1])))+
sin((732*pi)/8784*I(time(se2pricekvart2[,1])))+
cos((732*pi)/8784*I(time(se2pricekvart2[,1])))+
sin((17568*pi)/8784*I(time(se2pricekvart2[,1])))+
cos((17568*pi)/8784*I(time(se2pricekvart2[,1])))
)
spricekvart3 = glm(se2pricekvart3[,2] ~ time(se2pricekvart3[,1]) +
I(time(se2pricekvart3[,1])^2) +
sin((8*pi)/8784*I(time(se2pricekvart3[,1])))+
cos((8*pi)/8784*I(time(se2pricekvart3[,1])))+
sin((24*pi)/8784*I(time(se2pricekvart3[,1])))+
cos((24*pi)/8784*I(time(se2pricekvart3[,1])))+
sin((104*pi)/8784*I(time(se2pricekvart3[,1])))+
cos((104*pi)/8784*I(time(se2pricekvart3[,1])))+
sin((732*pi)/8784*I(time(se2pricekvart3[,1])))+
cos((732*pi)/8784*I(time(se2pricekvart3[,1])))+
sin((17568*pi)/8784*I(time(se2pricekvart3[,1])))+
cos((17568*pi)/8784*I(time(se2pricekvart3[,1])))
)
spricekvart4 = glm(se2pricekvart4[,2] ~ time(se2pricekvart4[,1]) +
I(time(se2pricekvart4[,1])^2) +
sin((8*pi)/8784*I(time(se2pricekvart4[,1])))+
cos((8*pi)/8784*I(time(se2pricekvart4[,1])))+
sin((24*pi)/8784*I(time(se2pricekvart4[,1])))+
cos((24*pi)/8784*I(time(se2pricekvart4[,1])))+
sin((104*pi)/8784*I(time(se2pricekvart4[,1])))+
cos((104*pi)/8784*I(time(se2pricekvart4[,1])))+
sin((732*pi)/8784*I(time(se2pricekvart4[,1])))+
cos((732*pi)/8784*I(time(se2pricekvart4[,1])))+
sin((17568*pi)/8784*I(time(se2pricekvart4[,1])))+
cos((17568*pi)/8784*I(time(se2pricekvart4[,1])))
)
# VAR Modeller kvart
# PROD
x_t1 = ts(sprodkvart1$residuals)[1:2182]
x_t2 = ts(sprodkvart2$residuals)
x_t3 = ts(sprodkvart3$residuals)
x_t4 = ts(sprodkvart4$residuals)
acf(x_t1)
#CONS
z_t1 = ts(sconskvart1$residuals)[1:2182]
z_t2 = ts(sconskvart2$residuals)
z_t3 = ts(sconskvart3$residuals)
z_t4 = ts(sconskvart4$residuals)
# PRICE
y_t1 = ts(spricekvart1$residuals)
y_t2 = ts(spricekvart2$residuals)
y_t3 = ts(spricekvart3$residuals)
y_t4 = ts(spricekvart4$residuals)
# VAR MODEL
X_t1 = data.frame(y_t1, x_t1, z_t1)
X_t2 = data.frame(y_t2,x_t2, z_t2)
X_t3 = data.frame(y_t3,x_t3, z_t3)
X_t4 = data.frame(y_t4,x_t4, z_t4)
fit1 = VAR(X_t1, ic = "AIC", lag.max = 10)
fit2 = VAR(X_t2, ic = "AIC", lag.max = 10)
fit3 = VAR(X_t3, ic = "AIC", lag.max = 10)
fit4 = VAR(X_t4, ic = "AIC", lag.max = 10)
summary(fit1)
summary(fit2)
summary(fit3)
summary(fit4)
seas_x1 = sarima(x_t1,4,1,0,1,0,0,24, no.constant = TRUE)
detach("package:sarima", unload=TRUE)
library(readxl)
library(vars)
library(imputeTS)
library(forecast)
library(tseries)
library(stats)
library(strucchange)
library(tidyr)
elprice16 =  data.frame(read.csv("elspot-prices_2016_hourly_eur.csv",sep=";",dec=","))
cons16 = data.frame(read.csv("consumption-se-areas_2016_hourly.csv",sep=";"))
prod16 = data.frame(read.csv("production2016_hourly.csv",sep=";"))
#PRISER
SE2price = elprice16[1:8785,5]
#FORBRUG
SE2cons = na_interpolation(as.numeric(as.character(cons16[3:8787,4])), option = "linear")
#PRODUKTION
SE2prod = na_interpolation(as.numeric(as.character(prod16[3:8787,4])), option = "linear")
#DATO
dato1 <- seq(c(ISOdate(2016,1,1,0)), by = "hours", length.out = 8785)
#DATA
data = data.frame(dato1,SE2price,SE2cons,SE2prod)
plot.ts(SE2price)
plot.ts(SE2cons)
plot.ts(SE2prod)
### Sæson kvartal price
se2pricekvart1 = data[1:2183,1:2]
se2pricekvart2 = data[2184:4367,1:2]
se2pricekvart3 = data[4368:6575,1:2]
se2pricekvart4 = data[6576:8784,1:2]
### Sæson kvartal cons
se2conskvart1 = data[1:2183,c(1,3)]
se2conskvart2 = data[2184:4367,c(1,3)]
se2conskvart3 = data[4368:6575,c(1,3)]
se2conskvart4 = data[6576:8784,c(1,3)]
### Sæson kvartal wind
se2prodkvart1 = data[1:2183,c(1,4)]
se2prodkvart2 = data[2184:4367,c(1,4)]
se2prodkvart3 = data[4368:6575,c(1,4)]
se2prodkvart4 = data[6576:8784,c(1,4)]
sprodkvart1 = glm(se2prodkvart1[,2] ~ time(se2prodkvart1[,1]) +
I(time(se2prodkvart1[,1])^2) +
sin((8*pi)/8784*I(time(se2prodkvart1[,1])))+
cos((8*pi)/8784*I(time(se2prodkvart1[,1])))+
sin((24*pi)/8784*I(time(se2prodkvart1[,1])))+
cos((24*pi)/8784*I(time(se2prodkvart1[,1])))+
sin((104*pi)/8784*I(time(se2prodkvart1[,1])))+
cos((104*pi)/8784*I(time(se2prodkvart1[,1])))+
sin((732*pi)/8784*I(time(se2prodkvart1[,1])))+
cos((732*pi)/8784*I(time(se2prodkvart1[,1])))+
sin((17568*pi)/8784*I(time(se2prodkvart1[,1])))+
cos((17568*pi)/8784*I(time(se2prodkvart1[,1])))
)
sprodkvart2 = glm(se2prodkvart2[,2] ~ time(se2prodkvart2[,1]) +
I(time(se2prodkvart2[,1])^2) +
sin((8*pi)/8784*I(time(se2prodkvart2[,1])))+
cos((8*pi)/8784*I(time(se2prodkvart2[,1])))+
sin((24*pi)/8784*I(time(se2prodkvart2[,1])))+
cos((24*pi)/8784*I(time(se2prodkvart2[,1])))+
sin((104*pi)/8784*I(time(se2prodkvart2[,1])))+
cos((104*pi)/8784*I(time(se2prodkvart2[,1])))+
sin((732*pi)/8784*I(time(se2prodkvart2[,1])))+
cos((732*pi)/8784*I(time(se2prodkvart2[,1])))+
sin((17568*pi)/8784*I(time(se2prodkvart2[,1])))+
cos((17568*pi)/8784*I(time(se2prodkvart2[,1])))
)
sprodkvart3 = glm(se2prodkvart3[,2] ~ time(se2prodkvart3[,1]) +
I(time(se2prodkvart3[,1])^2) +
sin((8*pi)/8784*I(time(se2prodkvart3[,1])))+
cos((8*pi)/8784*I(time(se2prodkvart3[,1])))+
sin((24*pi)/8784*I(time(se2prodkvart3[,1])))+
cos((24*pi)/8784*I(time(se2prodkvart3[,1])))+
sin((104*pi)/8784*I(time(se2prodkvart3[,1])))+
cos((104*pi)/8784*I(time(se2prodkvart3[,1])))+
sin((732*pi)/8784*I(time(se2prodkvart3[,1])))+
cos((732*pi)/8784*I(time(se2prodkvart3[,1])))+
sin((17568*pi)/8784*I(time(se2prodkvart3[,1])))+
cos((17568*pi)/8784*I(time(se2prodkvart3[,1])))
)
sprodkvart4 = glm(se2prodkvart4[,2] ~ time(se2prodkvart4[,1]) +
I(time(se2prodkvart4[,1])^2) +
sin((8*pi)/8784*I(time(se2prodkvart4[,1])))+
cos((8*pi)/8784*I(time(se2prodkvart4[,1])))+
sin((24*pi)/8784*I(time(se2prodkvart4[,1])))+
cos((24*pi)/8784*I(time(se2prodkvart4[,1])))+
sin((104*pi)/8784*I(time(se2prodkvart4[,1])))+
cos((104*pi)/8784*I(time(se2prodkvart4[,1])))+
sin((732*pi)/8784*I(time(se2prodkvart4[,1])))+
cos((732*pi)/8784*I(time(se2prodkvart4[,1])))+
sin((17568*pi)/8784*I(time(se2prodkvart4[,1])))+
cos((17568*pi)/8784*I(time(se2prodkvart4[,1])))
)
### Sæson kvartal consumption
sconskvart1 = glm(se2conskvart1[,2] ~ time(se2conskvart1[,1]) +
I(time(se2conskvart1[,1])^2) +
sin((8*pi)/8784*I(time(se2conskvart1[,1])))+
cos((8*pi)/8784*I(time(se2conskvart1[,1])))+
sin((24*pi)/8784*I(time(se2conskvart1[,1])))+
cos((24*pi)/8784*I(time(se2conskvart1[,1])))+
sin((104*pi)/8784*I(time(se2conskvart1[,1])))+
cos((104*pi)/8784*I(time(se2conskvart1[,1])))+
sin((732*pi)/8784*I(time(se2conskvart1[,1])))+
cos((732*pi)/8784*I(time(se2conskvart1[,1])))+
sin((17568*pi)/8784*I(time(se2conskvart1[,1])))+
cos((17568*pi)/8784*I(time(se2conskvart1[,1])))
)
sconskvart2 = glm(se2conskvart2[,2] ~ time(se2conskvart2[,1]) +
I(time(se2conskvart2[,1])^2) +
sin((8*pi)/8784*I(time(se2conskvart2[,1])))+
cos((8*pi)/8784*I(time(se2conskvart2[,1])))+
sin((24*pi)/8784*I(time(se2conskvart2[,1])))+
cos((24*pi)/8784*I(time(se2conskvart2[,1])))+
sin((104*pi)/8784*I(time(se2conskvart2[,1])))+
cos((104*pi)/8784*I(time(se2conskvart2[,1])))+
sin((732*pi)/8784*I(time(se2conskvart2[,1])))+
cos((732*pi)/8784*I(time(se2conskvart2[,1])))+
sin((17568*pi)/8784*I(time(se2conskvart2[,1])))+
cos((17568*pi)/8784*I(time(se2conskvart2[,1])))
)
sconskvart3 = glm(se2conskvart3[,2] ~ time(se2conskvart3[,1]) +
I(time(se2conskvart3[,1])^2) +
sin((8*pi)/8784*I(time(se2conskvart3[,1])))+
cos((8*pi)/8784*I(time(se2conskvart3[,1])))+
sin((24*pi)/8784*I(time(se2conskvart3[,1])))+
cos((24*pi)/8784*I(time(se2conskvart3[,1])))+
sin((104*pi)/8784*I(time(se2conskvart3[,1])))+
cos((104*pi)/8784*I(time(se2conskvart3[,1])))+
sin((732*pi)/8784*I(time(se2conskvart3[,1])))+
cos((732*pi)/8784*I(time(se2conskvart3[,1])))+
sin((17568*pi)/8784*I(time(se2conskvart3[,1])))+
cos((17568*pi)/8784*I(time(se2conskvart3[,1])))
)
sconskvart4 = glm(se2conskvart4[,2] ~ time(se2conskvart4[,1]) +
I(time(se2conskvart4[,1])^2) +
sin((8*pi)/8784*I(time(se2conskvart4[,1])))+
cos((8*pi)/8784*I(time(se2conskvart4[,1])))+
sin((24*pi)/8784*I(time(se2conskvart4[,1])))+
cos((24*pi)/8784*I(time(se2conskvart4[,1])))+
sin((104*pi)/8784*I(time(se2conskvart4[,1])))+
cos((104*pi)/8784*I(time(se2conskvart4[,1])))+
sin((732*pi)/8784*I(time(se2conskvart4[,1])))+
cos((732*pi)/8784*I(time(se2conskvart4[,1])))+
sin((17568*pi)/8784*I(time(se2conskvart4[,1])))+
cos((17568*pi)/8784*I(time(se2conskvart4[,1])))
)
### Sæson kvartal price
spricekvart1 = glm(se2pricekvart1[,2] ~ time(se2pricekvart1[,1]) +
I(time(se2pricekvart1[,1])^2) +
sin((8*pi)/8784*I(time(se2pricekvart1[,1])))+
cos((8*pi)/8784*I(time(se2pricekvart1[,1])))+
sin((24*pi)/8784*I(time(se2pricekvart1[,1])))+
cos((24*pi)/8784*I(time(se2pricekvart1[,1])))+
sin((104*pi)/8784*I(time(se2pricekvart1[,1])))+
cos((104*pi)/8784*I(time(se2pricekvart1[,1])))+
sin((732*pi)/8784*I(time(se2pricekvart1[,1])))+
cos((732*pi)/8784*I(time(se2pricekvart1[,1])))+
sin((17568*pi)/8784*I(time(se2pricekvart1[,1])))+
cos((17568*pi)/8784*I(time(se2pricekvart1[,1])))
)
spricekvart2 = glm(se2pricekvart2[,2] ~ time(se2pricekvart2[,1]) +
I(time(se2pricekvart2[,1])^2) +
sin((8*pi)/8784*I(time(se2pricekvart2[,1])))+
cos((8*pi)/8784*I(time(se2pricekvart2[,1])))+
sin((24*pi)/8784*I(time(se2pricekvart2[,1])))+
cos((24*pi)/8784*I(time(se2pricekvart2[,1])))+
sin((104*pi)/8784*I(time(se2pricekvart2[,1])))+
cos((104*pi)/8784*I(time(se2pricekvart2[,1])))+
sin((732*pi)/8784*I(time(se2pricekvart2[,1])))+
cos((732*pi)/8784*I(time(se2pricekvart2[,1])))+
sin((17568*pi)/8784*I(time(se2pricekvart2[,1])))+
cos((17568*pi)/8784*I(time(se2pricekvart2[,1])))
)
spricekvart3 = glm(se2pricekvart3[,2] ~ time(se2pricekvart3[,1]) +
I(time(se2pricekvart3[,1])^2) +
sin((8*pi)/8784*I(time(se2pricekvart3[,1])))+
cos((8*pi)/8784*I(time(se2pricekvart3[,1])))+
sin((24*pi)/8784*I(time(se2pricekvart3[,1])))+
cos((24*pi)/8784*I(time(se2pricekvart3[,1])))+
sin((104*pi)/8784*I(time(se2pricekvart3[,1])))+
cos((104*pi)/8784*I(time(se2pricekvart3[,1])))+
sin((732*pi)/8784*I(time(se2pricekvart3[,1])))+
cos((732*pi)/8784*I(time(se2pricekvart3[,1])))+
sin((17568*pi)/8784*I(time(se2pricekvart3[,1])))+
cos((17568*pi)/8784*I(time(se2pricekvart3[,1])))
)
spricekvart4 = glm(se2pricekvart4[,2] ~ time(se2pricekvart4[,1]) +
I(time(se2pricekvart4[,1])^2) +
sin((8*pi)/8784*I(time(se2pricekvart4[,1])))+
cos((8*pi)/8784*I(time(se2pricekvart4[,1])))+
sin((24*pi)/8784*I(time(se2pricekvart4[,1])))+
cos((24*pi)/8784*I(time(se2pricekvart4[,1])))+
sin((104*pi)/8784*I(time(se2pricekvart4[,1])))+
cos((104*pi)/8784*I(time(se2pricekvart4[,1])))+
sin((732*pi)/8784*I(time(se2pricekvart4[,1])))+
cos((732*pi)/8784*I(time(se2pricekvart4[,1])))+
sin((17568*pi)/8784*I(time(se2pricekvart4[,1])))+
cos((17568*pi)/8784*I(time(se2pricekvart4[,1])))
)
# VAR Modeller kvart
# PROD
x_t1 = ts(sprodkvart1$residuals)[1:2182]
x_t2 = ts(sprodkvart2$residuals)
x_t3 = ts(sprodkvart3$residuals)
x_t4 = ts(sprodkvart4$residuals)
acf(x_t1)
#CONS
z_t1 = ts(sconskvart1$residuals)[1:2182]
z_t2 = ts(sconskvart2$residuals)
z_t3 = ts(sconskvart3$residuals)
z_t4 = ts(sconskvart4$residuals)
# PRICE
y_t1 = ts(spricekvart1$residuals)
y_t2 = ts(spricekvart2$residuals)
y_t3 = ts(spricekvart3$residuals)
y_t4 = ts(spricekvart4$residuals)
# VAR MODEL
X_t1 = data.frame(y_t1, x_t1, z_t1)
X_t2 = data.frame(y_t2,x_t2, z_t2)
X_t3 = data.frame(y_t3,x_t3, z_t3)
X_t4 = data.frame(y_t4,x_t4, z_t4)
fit1 = VAR(X_t1, ic = "AIC", lag.max = 10)
fit2 = VAR(X_t2, ic = "AIC", lag.max = 10)
fit3 = VAR(X_t3, ic = "AIC", lag.max = 10)
fit4 = VAR(X_t4, ic = "AIC", lag.max = 10)
summary(fit1)
summary(fit2)
summary(fit3)
summary(fit4)
seas_x1 = sarima(x_t1,4,1,0,1,0,0,24, no.constant = TRUE)
res_x1 = ts(seas_x1$residuals)[1:2181]
acf(x_t1)
acf(SE2prod)
seas_x1 = sarima(x_t1,4,1,0,1,0,0,24, no.constant = TRUE)
res_x1 = ts(seas_x1$residuals)[1:2181]
acf(res_x1)
?acf
acf2(x_t1)
acf2(z_t)
rm(list=ls())
#library(readxl)
#library(vars)
library(imputeTS)
#library(forecast)
#library(tseries)
#library(stats)
#library(strucchange)
library("astsa")
polymult <- function(x,a,b)
# a(B) = a_0 + a_1*B + a_2*B² + ... + a_p*B^p
# b(B) = b_0 + b_1*B + b_2*B² + ... + a_q*B^q
# where wlog p >= q
# Result is a(B)b(B) x_t
{
if (length(b) == 1){polycoeff <- b[1]*array(a)}
else
{alpha <- array(a)
p <- dim(alpha) - 1
beta <- array(b)
q <- dim(beta) - 1
# Assumed: p >= q
polycoeff <- array(rep(0,p+q + 1))
for (k in 0:(p+q))
for (j in max(0,k-q):min(k,p))
{polycoeff[k+1] <- polycoeff[k+1] + alpha[j+1]*beta[k-j+1]}
}
return(filter(x,c(polycoeff),sides=1, method="convolution"))
# test: return(polycoeff)
}
polyinvers <- function (x, a, maxlag = 30)
# a(B) = a_0 + a_1*B + a_2*B² + ... + a_p*B^p
# Result is (1/a(B)) x_t
{
phi <- array(a)
p <- dim(phi) - 1 # assumed >= 1
polycoeff <- array(rep(0,maxlag))
polycoeff[1] <- 1/phi[1]
for (k in 1:(maxlag - 1))
for (j in (1:min(p,k)))
{polycoeff[k+1] <- polycoeff[k+1] - phi[j+1]*polycoeff[k-j+1]/phi[1]}
return(filter(x,c(polycoeff),sides=1, method="convolution"))
#test:return(polycoeff)
}
cons16 = data.frame(read.csv("/home/esben/P-drev/Dokumenter/Undervisning/6. semester F2020/5.232 b/Bachelor-master-30-4/consumption-se-areas_2016_hourly.csv",sep=";"))
CONS16 = cons16[3:8787,4]
SE2cons = data.frame(na_interpolation(c(CONS16), option = "linear"))
dato1 <- seq(c(ISOdate(2016,1,1,0)), by = "hours", length.out = 8785)
data = data.frame(dato1,SE2cons)
data <- data[1:2182,1:2]
se2conskvart1 <- data
plot(se2conskvart1,type="l")
acf2(se2conskvart1[,2])
# model
scons= lm(se2conskvart1[,2] ~ time(data[,1])+
sin((2*pi)/24*I(time(data[,1])))+
cos((2*pi)/24*I(time(data[,1])))+
sin((4*pi)/24*I(time(data[,1])))+
cos((4*pi)/24*I(time(data[,1])))
)
summary(scons)
z_t = ts(scons$residuals)
plot.ts(z_t)
plot.ts(diff(z_t,12))
acf2(z_t)
acf2(diff(z_t,1))
est_resultat <- sarima(z_t,4,1,0,1,0,0,24,no.constant = TRUE)
est_resultat$ttable
plot(est_resultat$fit$residuals, type="l")
acf2(est_resultat$fit$residuals)
coefs <- est_resultat$fit$coef
print(coefs)
coefs_saeson_Phi <- c(1,rep(0,23),-coefs[5])
# (1-Phi*B^24)*(1-B)z_t = stationær AR(4) proces :
stat_z_t <- polymult(diff(z_t),coefs_saeson_Phi,1)
acf2(stat_z_t)
# Denne kan så fx indgå i en VAR model
cons16 = data.frame(read.csv("consumption-se-areas_2016_hourly.csv",sep=";"))
rm(list=ls())
#library(readxl)
#library(vars)
library(imputeTS)
#library(forecast)
#library(tseries)
#library(stats)
#library(strucchange)
library("astsa")
polymult <- function(x,a,b)
# a(B) = a_0 + a_1*B + a_2*B² + ... + a_p*B^p
# b(B) = b_0 + b_1*B + b_2*B² + ... + a_q*B^q
# where wlog p >= q
# Result is a(B)b(B) x_t
{
if (length(b) == 1){polycoeff <- b[1]*array(a)}
else
{alpha <- array(a)
p <- dim(alpha) - 1
beta <- array(b)
q <- dim(beta) - 1
# Assumed: p >= q
polycoeff <- array(rep(0,p+q + 1))
for (k in 0:(p+q))
for (j in max(0,k-q):min(k,p))
{polycoeff[k+1] <- polycoeff[k+1] + alpha[j+1]*beta[k-j+1]}
}
return(filter(x,c(polycoeff),sides=1, method="convolution"))
# test: return(polycoeff)
}
polyinvers <- function (x, a, maxlag = 30)
# a(B) = a_0 + a_1*B + a_2*B² + ... + a_p*B^p
# Result is (1/a(B)) x_t
{
phi <- array(a)
p <- dim(phi) - 1 # assumed >= 1
polycoeff <- array(rep(0,maxlag))
polycoeff[1] <- 1/phi[1]
for (k in 1:(maxlag - 1))
for (j in (1:min(p,k)))
{polycoeff[k+1] <- polycoeff[k+1] - phi[j+1]*polycoeff[k-j+1]/phi[1]}
return(filter(x,c(polycoeff),sides=1, method="convolution"))
#test:return(polycoeff)
}
cons16 = data.frame(read.csv("/home/esben/P-drev/Dokumenter/Undervisning/6. semester F2020/5.232 b/Bachelor-master-30-4/consumption-se-areas_2016_hourly.csv",sep=";"))
CONS16 = cons16[3:8787,4]
SE2cons = data.frame(na_interpolation(c(CONS16), option = "linear"))
dato1 <- seq(c(ISOdate(2016,1,1,0)), by = "hours", length.out = 8785)
data = data.frame(dato1,SE2cons)
data <- data[1:2182,1:2]
se2conskvart1 <- data
plot(se2conskvart1,type="l")
acf2(se2conskvart1[,2])
# model
scons= lm(se2conskvart1[,2] ~ time(data[,1])+
sin((2*pi)/24*I(time(data[,1])))+
cos((2*pi)/24*I(time(data[,1])))+
sin((4*pi)/24*I(time(data[,1])))+
cos((4*pi)/24*I(time(data[,1])))
)
summary(scons)
z_t = ts(scons$residuals)
plot.ts(z_t)
plot.ts(diff(z_t,12))
acf2(z_t)
acf2(diff(z_t,1))
est_resultat <- sarima(z_t,4,1,0,1,0,0,24,no.constant = TRUE)
est_resultat$ttable
plot(est_resultat$fit$residuals, type="l")
acf2(est_resultat$fit$residuals)
coefs <- est_resultat$fit$coef
print(coefs)
coefs_saeson_Phi <- c(1,rep(0,23),-coefs[5])
# (1-Phi*B^24)*(1-B)z_t = stationær AR(4) proces :
stat_z_t <- polymult(diff(z_t),coefs_saeson_Phi,1)
acf2(stat_z_t)
# Denne kan så fx indgå i en VAR model
cons16 = data.frame(read.csv("consumption-se-areas_2016_hourly.csv",sep=";"))
CONS16 = cons16[3:8787,4]
SE2cons = data.frame(na_interpolation(c(CONS16), option = "linear"))
dato1 <- seq(c(ISOdate(2016,1,1,0)), by = "hours", length.out = 8785)
data = data.frame(dato1,SE2cons)
data <- data[1:2182,1:2]
se2conskvart1 <- data
plot(se2conskvart1,type="l")
acf2(se2conskvart1[,2])
scons= lm(se2conskvart1[,2] ~ time(data[,1])+
sin((2*pi)/24*I(time(data[,1])))+
cos((2*pi)/24*I(time(data[,1])))+
sin((4*pi)/24*I(time(data[,1])))+
cos((4*pi)/24*I(time(data[,1])))
)
summary(scons)
z_t = ts(scons$residuals)
plot.ts(z_t)
plot.ts(diff(z_t,12))
acf2(z_t)
acf2(diff(z_t,1))
