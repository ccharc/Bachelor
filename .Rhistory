library(tseries)
library(stats)
library(strucchange)
library(tidyr)
library(astsa)
elprice16 =  data.frame(read.csv("elspot-prices_2016_hourly_eur.csv",sep=";",dec=","))
cons16 = data.frame(read.csv("consumption-se-areas_2016_hourly.csv",sep=";"))
prod16 = data.frame(read.csv("production2016_hourly.csv",sep=";"))
SE2price = elprice16[1:8785,5]
SE2cons = na_interpolation(as.numeric(as.character(cons16[3:8787,4])), option = "linear")
SE2prod = na_interpolation(as.numeric(as.character(prod16[3:8787,4])), option = "linear")
dato1 <- seq(c(ISOdate(2016,1,1,0)), by = "hours", length.out = 8785)
data = data.frame(dato1,SE2price,SE2cons,SE2prod)
plot.ts(SE2price)
plot.ts(SE2cons)
plot.ts(SE2prod)
se2pricekvart1 = data[1:2183,1:2]
se2pricekvart2 = data[2184:4367,1:2]
se2pricekvart3 = data[4368:6575,1:2]
se2pricekvart4 = data[6576:8784,1:2]
se2conskvart1 = data[1:2183,c(1,3)]
se2conskvart2 = data[2184:4367,c(1,3)]
se2conskvart3 = data[4368:6575,c(1,3)]
se2conskvart4 = data[6576:8784,c(1,3)]
se2prodkvart1 = data[1:2183,c(1,4)]
se2prodkvart2 = data[2184:4367,c(1,4)]
se2prodkvart3 = data[4368:6575,c(1,4)]
se2prodkvart4 = data[6576:8784,c(1,4)]
sprodkvart1 = glm(se2prodkvart1[,2] ~ time(se2prodkvart1[,1]) +
I(time(se2prodkvart1[,1])^2) +
sin((8*pi)/8784*I(time(se2prodkvart1[,1])))+
cos((8*pi)/8784*I(time(se2prodkvart1[,1])))+
sin((24*pi)/8784*I(time(se2prodkvart1[,1])))+
cos((24*pi)/8784*I(time(se2prodkvart1[,1])))+
sin((104*pi)/8784*I(time(se2prodkvart1[,1])))+
cos((104*pi)/8784*I(time(se2prodkvart1[,1])))+
sin((732*pi)/8784*I(time(se2prodkvart1[,1])))+
cos((732*pi)/8784*I(time(se2prodkvart1[,1])))+
sin((1464*pi)/8784*I(time(se2prodkvart1[,1])))+
cos((1464*pi)/8784*I(time(se2prodkvart1[,1])))+
sin((17568*pi)/8784*I(time(se2prodkvart1[,1])))+
cos((17568*pi)/8784*I(time(se2prodkvart1[,1])))
)
sprodkvart2 = glm(se2prodkvart2[,2] ~ time(se2prodkvart2[,1]) +
I(time(se2prodkvart2[,1])^2) +
sin((8*pi)/8784*I(time(se2prodkvart2[,1])))+
cos((8*pi)/8784*I(time(se2prodkvart2[,1])))+
sin((24*pi)/8784*I(time(se2prodkvart2[,1])))+
cos((24*pi)/8784*I(time(se2prodkvart2[,1])))+
sin((104*pi)/8784*I(time(se2prodkvart2[,1])))+
cos((104*pi)/8784*I(time(se2prodkvart2[,1])))+
sin((732*pi)/8784*I(time(se2prodkvart2[,1])))+
cos((732*pi)/8784*I(time(se2prodkvart2[,1])))+
sin((1464*pi)/8784*I(time(se2prodkvart2[,1])))+
cos((1464*pi)/8784*I(time(se2prodkvart2[,1])))+
sin((17568*pi)/8784*I(time(se2prodkvart2[,1])))+
cos((17568*pi)/8784*I(time(se2prodkvart2[,1])))
)
sprodkvart3 = glm(se2prodkvart3[,2] ~ time(se2prodkvart3[,1]) +
I(time(se2prodkvart3[,1])^2) +
sin((8*pi)/8784*I(time(se2prodkvart3[,1])))+
cos((8*pi)/8784*I(time(se2prodkvart3[,1])))+
sin((24*pi)/8784*I(time(se2prodkvart3[,1])))+
cos((24*pi)/8784*I(time(se2prodkvart3[,1])))+
sin((104*pi)/8784*I(time(se2prodkvart3[,1])))+
cos((104*pi)/8784*I(time(se2prodkvart3[,1])))+
sin((732*pi)/8784*I(time(se2prodkvart3[,1])))+
cos((732*pi)/8784*I(time(se2prodkvart3[,1])))+
sin((1464*pi)/8784*I(time(se2prodkvart3[,1])))+
cos((1464*pi)/8784*I(time(se2prodkvart3[,1])))+
sin((17568*pi)/8784*I(time(se2prodkvart3[,1])))+
cos((17568*pi)/8784*I(time(se2prodkvart3[,1])))
)
sprodkvart4 = glm(se2prodkvart4[,2] ~ time(se2prodkvart4[,1]) +
I(time(se2prodkvart4[,1])^2) +
sin((8*pi)/8784*I(time(se2prodkvart4[,1])))+
cos((8*pi)/8784*I(time(se2prodkvart4[,1])))+
sin((24*pi)/8784*I(time(se2prodkvart4[,1])))+
cos((24*pi)/8784*I(time(se2prodkvart4[,1])))+
sin((104*pi)/8784*I(time(se2prodkvart4[,1])))+
cos((104*pi)/8784*I(time(se2prodkvart4[,1])))+
sin((732*pi)/8784*I(time(se2prodkvart4[,1])))+
cos((732*pi)/8784*I(time(se2prodkvart4[,1])))+
sin((1464*pi)/8784*I(time(se2prodkvart4[,1])))+
cos((1464*pi)/8784*I(time(se2prodkvart4[,1])))+
sin((17568*pi)/8784*I(time(se2prodkvart4[,1])))+
cos((17568*pi)/8784*I(time(se2prodkvart4[,1])))
)
sconskvart1 = glm(se2conskvart1[,2] ~ time(se2conskvart1[,1]) +
I(time(se2conskvart1[,1])^2) +
sin((8*pi)/8784*I(time(se2conskvart1[,1])))+
cos((8*pi)/8784*I(time(se2conskvart1[,1])))+
sin((24*pi)/8784*I(time(se2conskvart1[,1])))+
cos((24*pi)/8784*I(time(se2conskvart1[,1])))+
sin((104*pi)/8784*I(time(se2conskvart1[,1])))+
cos((104*pi)/8784*I(time(se2conskvart1[,1])))+
sin((732*pi)/8784*I(time(se2conskvart1[,1])))+
cos((732*pi)/8784*I(time(se2conskvart1[,1])))+
sin((1464*pi)/8784*I(time(se2conskvart1[,1])))+
cos((1464*pi)/8784*I(time(se2conskvart1[,1])))+
sin((17568*pi)/8784*I(time(se2conskvart1[,1])))+
cos((17568*pi)/8784*I(time(se2conskvart1[,1])))
)
sconskvart2 = glm(se2conskvart2[,2] ~ time(se2conskvart2[,1]) +
I(time(se2conskvart2[,1])^2) +
sin((8*pi)/8784*I(time(se2conskvart2[,1])))+
cos((8*pi)/8784*I(time(se2conskvart2[,1])))+
sin((24*pi)/8784*I(time(se2conskvart2[,1])))+
cos((24*pi)/8784*I(time(se2conskvart2[,1])))+
sin((104*pi)/8784*I(time(se2conskvart2[,1])))+
cos((104*pi)/8784*I(time(se2conskvart2[,1])))+
sin((732*pi)/8784*I(time(se2conskvart2[,1])))+
cos((732*pi)/8784*I(time(se2conskvart2[,1])))+
sin((1464*pi)/8784*I(time(se2conskvart2[,1])))+
cos((1464*pi)/8784*I(time(se2conskvart2[,1])))+
sin((17568*pi)/8784*I(time(se2conskvart2[,1])))+
cos((17568*pi)/8784*I(time(se2conskvart2[,1])))
)
sconskvart3 = glm(se2conskvart3[,2] ~ time(se2conskvart3[,1]) +
I(time(se2conskvart3[,1])^2) +
sin((8*pi)/8784*I(time(se2conskvart3[,1])))+
cos((8*pi)/8784*I(time(se2conskvart3[,1])))+
sin((24*pi)/8784*I(time(se2conskvart3[,1])))+
cos((24*pi)/8784*I(time(se2conskvart3[,1])))+
sin((104*pi)/8784*I(time(se2conskvart3[,1])))+
cos((104*pi)/8784*I(time(se2conskvart3[,1])))+
sin((732*pi)/8784*I(time(se2conskvart3[,1])))+
cos((732*pi)/8784*I(time(se2conskvart3[,1])))+
sin((1464*pi)/8784*I(time(se2conskvart3[,1])))+
cos((1464*pi)/8784*I(time(se2conskvart3[,1])))+
sin((17568*pi)/8784*I(time(se2conskvart3[,1])))+
cos((17568*pi)/8784*I(time(se2conskvart3[,1])))
)
sconskvart4 = glm(se2conskvart4[,2] ~ time(se2conskvart4[,1]) +
I(time(se2conskvart4[,1])^2) +
sin((8*pi)/8784*I(time(se2conskvart4[,1])))+
cos((8*pi)/8784*I(time(se2conskvart4[,1])))+
sin((24*pi)/8784*I(time(se2conskvart4[,1])))+
cos((24*pi)/8784*I(time(se2conskvart4[,1])))+
sin((104*pi)/8784*I(time(se2conskvart4[,1])))+
cos((104*pi)/8784*I(time(se2conskvart4[,1])))+
sin((732*pi)/8784*I(time(se2conskvart4[,1])))+
cos((732*pi)/8784*I(time(se2conskvart4[,1])))+
sin((1464*pi)/8784*I(time(se2conskvart4[,1])))+
cos((1464*pi)/8784*I(time(se2conskvart4[,1])))+
sin((17568*pi)/8784*I(time(se2conskvart4[,1])))+
cos((17568*pi)/8784*I(time(se2conskvart4[,1])))
)
spricekvart1 = glm(se2pricekvart1[,2] ~ time(se2pricekvart1[,1]) +
I(time(se2pricekvart1[,1])^2) +
sin((8*pi)/8784*I(time(se2pricekvart1[,1])))+
cos((8*pi)/8784*I(time(se2pricekvart1[,1])))+
sin((24*pi)/8784*I(time(se2pricekvart1[,1])))+
cos((24*pi)/8784*I(time(se2pricekvart1[,1])))+
sin((104*pi)/8784*I(time(se2pricekvart1[,1])))+
cos((104*pi)/8784*I(time(se2pricekvart1[,1])))+
sin((732*pi)/8784*I(time(se2pricekvart1[,1])))+
cos((732*pi)/8784*I(time(se2pricekvart1[,1])))+
sin((1464*pi)/8784*I(time(se2pricekvart1[,1])))+
cos((1464*pi)/8784*I(time(se2pricekvart1[,1])))+
sin((17568*pi)/8784*I(time(se2pricekvart1[,1])))+
cos((17568*pi)/8784*I(time(se2pricekvart1[,1])))
)
spricekvart2 = glm(se2pricekvart2[,2] ~ time(se2pricekvart2[,1]) +
I(time(se2pricekvart2[,1])^2) +
sin((8*pi)/8784*I(time(se2pricekvart2[,1])))+
cos((8*pi)/8784*I(time(se2pricekvart2[,1])))+
sin((24*pi)/8784*I(time(se2pricekvart2[,1])))+
cos((24*pi)/8784*I(time(se2pricekvart2[,1])))+
sin((104*pi)/8784*I(time(se2pricekvart2[,1])))+
cos((104*pi)/8784*I(time(se2pricekvart2[,1])))+
sin((732*pi)/8784*I(time(se2pricekvart2[,1])))+
cos((732*pi)/8784*I(time(se2pricekvart2[,1])))+
sin((1464*pi)/8784*I(time(se2pricekvart2[,1])))+
cos((1464*pi)/8784*I(time(se2pricekvart2[,1])))+
sin((17568*pi)/8784*I(time(se2pricekvart2[,1])))+
cos((17568*pi)/8784*I(time(se2pricekvart2[,1])))
)
spricekvart3 = glm(se2pricekvart3[,2] ~ time(se2pricekvart3[,1]) +
I(time(se2pricekvart3[,1])^2) +
sin((8*pi)/8784*I(time(se2pricekvart3[,1])))+
cos((8*pi)/8784*I(time(se2pricekvart3[,1])))+
sin((24*pi)/8784*I(time(se2pricekvart3[,1])))+
cos((24*pi)/8784*I(time(se2pricekvart3[,1])))+
sin((104*pi)/8784*I(time(se2pricekvart3[,1])))+
cos((104*pi)/8784*I(time(se2pricekvart3[,1])))+
sin((732*pi)/8784*I(time(se2pricekvart3[,1])))+
cos((732*pi)/8784*I(time(se2pricekvart3[,1])))+
sin((1464*pi)/8784*I(time(se2pricekvart3[,1])))+
cos((1464*pi)/8784*I(time(se2pricekvart3[,1])))+
sin((17568*pi)/8784*I(time(se2pricekvart3[,1])))+
cos((17568*pi)/8784*I(time(se2pricekvart3[,1])))
)
spricekvart4 = glm(se2pricekvart4[,2] ~ time(se2pricekvart4[,1]) +
I(time(se2pricekvart4[,1])^2) +
sin((8*pi)/8784*I(time(se2pricekvart4[,1])))+
cos((8*pi)/8784*I(time(se2pricekvart4[,1])))+
sin((24*pi)/8784*I(time(se2pricekvart4[,1])))+
cos((24*pi)/8784*I(time(se2pricekvart4[,1])))+
sin((104*pi)/8784*I(time(se2pricekvart4[,1])))+
cos((104*pi)/8784*I(time(se2pricekvart4[,1])))+
sin((732*pi)/8784*I(time(se2pricekvart4[,1])))+
cos((732*pi)/8784*I(time(se2pricekvart4[,1])))+
sin((1464*pi)/8784*I(time(se2pricekvart4[,1])))+
cos((1464*pi)/8784*I(time(se2pricekvart4[,1])))+
sin((17568*pi)/8784*I(time(se2pricekvart4[,1])))+
cos((17568*pi)/8784*I(time(se2pricekvart4[,1])))
)
# PROD
x_t1 = as.ts(sprodkvart1$residuals)[1:2182]
x_t2 = ts(sprodkvart2$residuals)
x_t3 = ts(sprodkvart3$residuals)
x_t4 = ts(sprodkvart4$residuals)
plot.ts(x_t1)
plot.ts(x_t2)
plot.ts(x_t3)
plot.ts(x_t4)
z_t1 = ts(sconskvart1$residuals)[1:2182]
z_t2 = ts(sconskvart2$residuals)
z_t3 = ts(sconskvart3$residuals)
z_t4 = ts(sconskvart4$residuals)
plot.ts(z_t1)
plot.ts(z_t2)
plot.ts(z_t3)
plot.ts(z_t4)
y_t1 = ts(spricekvart1$residuals)
y_t2 = ts(spricekvart2$residuals)
y_t3 = ts(spricekvart3$residuals)
y_t4 = ts(spricekvart4$residuals)
plot.ts(y_t1)
X_t1 = data.frame(y_t1, x_t1, z_t1)
X_t2 = data.frame(y_t2,x_t2, z_t2)
X_t3 = data.frame(y_t3,x_t3, z_t3)
X_t4 = data.frame(y_t4,x_t4, z_t4)
fit1 = VAR(X_t1, ic = "AIC", lag.max = 24)
fit2 = VAR(X_t2, ic = "AIC", lag.max = 24)
fit3 = VAR(X_t3, ic = "AIC", lag.max = 24)
fit4 = VAR(X_t4, ic = "AIC", lag.max = 24)
summary(fit1)
summary(fit2)
summary(fit3)
summary(fit4)
plot.ts(SE2cons)
fit1 = VAR(X_t1, ic = "AIC", lag.max = 24)
fit2 = VAR(X_t2, ic = "AIC", lag.max = 24)
fit3 = VAR(X_t3, ic = "AIC", lag.max = 24)
fit4 = VAR(X_t4, ic = "AIC", lag.max = 24)
summary(fit1)
acf2(x_t4)
acf2(diff(x_t4,1))
acf2(diff(x_t4,24))
acf2(x_t4)
acf2(x_t4)
acf2(diff(x_t4,1))
acf2(diff(x_t4,24))
seas_x4 = sarima(x_t4,3,1,0,2,1,0,24, no.constant = TRUE)
seas_x4 = sarima(x_t4,4,1,0,2,1,0,24, no.constant = TRUE)
seas_x4 = sarima(x_t4,5,1,0,2,1,0,24, no.constant = TRUE)
acf2(x_t1)
acf2(diff(x_t1,1))
acf2(diff(x_t1,24))
acf2(diff(diff(x_t1,1),24))
seas_x1 = sarima(x_t1,3,0,0,1,0,0,24, no.constant = TRUE)
acf2(x_t2)
acf2(diff(x_t2,1))
acf2(diff(x_t2,24))
acf2(diff(diff(x_t2,1),24))
seas_x2 = sarima(x_t2,1,1,0,1,1,0,24, no.constant = TRUE)
seas_x2res = ts(seas_x2$fit$residuals)
acf2(seas_x2res)
adf.test(seas_x2res) # stationær
coefs_x2 <- seas_x2$fit$coef
acf2(z_t1)
acf2(diff(z_t1,1))
acf2(diff(z_t1,24))
seas_z1 = sarima(z_t1,4,1,0,1,0,0,24, no.constant = TRUE)
seas_z1 = sarima(z_t1,4,1,0,3,0,0,24, no.constant = TRUE)
seas_z1 = sarima(z_t1,4,1,0,1,0,0,24, no.constant = TRUE)
auto.arima(z_t1)
auto.arima(z_t1, seasonal = 24)
auto.arima(z_t1, seasonal = TRUE)
auto.arima(z_t1, seasonal = FALSE)
AIC(seas_z1)
seas_z1$AIC
auto.arima(z_t1)
auto.arima(z_t1, ic = "BIC")
auto.arima(z_t1, ic = "bic")
seas_x1$AIC
seas_x1 = sarima(x_t1,3,0,0,2,0,0,24, no.constant = TRUE)
seas_x1$AIC
seas_x1 = sarima(x_t1,3,0,0,1,0,0,24, no.constant = TRUE)
seas_x1$AIC
seas_x1 = sarima(x_t1,3,0,0,2,0,0,24, no.constant = TRUE)
seas_x1$AIC
seas_x1 = sarima(x_t1,3,0,0,3,0,0,24, no.constant = TRUE)
seas_x1 = sarima(x_t1,3,0,0,4,0,0,24, no.constant = TRUE)
seas_x1 = sarima(x_t1,3,0,0,5,0,0,24, no.constant = TRUE)
seas_x1 = sarima(x_t1,4,0,0,2,0,0,24, no.constant = TRUE)
seas_x1 = sarima(x_t1,1,0,0,2,0,0,24, no.constant = TRUE)
seas_x1$AIC
seas_x1 = sarima(x_t1,2,0,0,2,0,0,24, no.constant = TRUE)
seas_x1$AIC
seas_x1 = sarima(x_t1,3,0,0,2,0,0,24, no.constant = TRUE)
seas_x1$AIC
seas_x1 = sarima(x_t1,3,1,0,2,0,0,24, no.constant = TRUE)
seas_x1 = sarima(x_t1,2,1,0,2,0,0,24, no.constant = TRUE)
seas_x1$AIC
seas_x1 = sarima(x_t1,3,0,0,2,0,0,24, no.constant = TRUE)
seas_x1 = sarima(x_t1,3,0,0,2,1,0,24, no.constant = TRUE)
seas_x1$AIC
seas_x1 = sarima(x_t1,3,0,0,2,0,0,24, no.constant = TRUE)
acf2(x_t1)
acf2(diff(x_t1,24))
seas_x1 = sarima(x_t1,3,0,0,3,0,0,24, no.constant = TRUE)
seas_x1 = sarima(x_t1,3,0,0,2,0,0,24, no.constant = TRUE)
seas_x1$AIC
acf2(x_t1)
acf2(diff(x_t1,24))
acf2(x_t1, frequency= 24)
acf2(diff(x_t1,24))
acf2(x_t1)
acf2(diff(x_t1,24))
seas_x1 = sarima(x_t1,3,0,0,2,1,0,24, no.constant = TRUE)
seas_x1$AIC
seas_x1 = sarima(x_t1,3,0,0,2,0,0,24, no.constant = TRUE)
seas_x1$AIC
setwd("~/Desktop/MatØk6/Bachelor")
library(readxl)
library(vars)
library(imputeTS)
library(forecast)
library(tseries)
library(stats)
library(strucchange)
library(tidyr)
library(astsa)
library(car)
library(Matrix)
polymult <- function(x,a,b)
# a(B) = a_0 + a_1*B + a_2*B² + ... + a_p*B^p
# b(B) = b_0 + b_1*B + b_2*B² + ... + a_q*B^q
# where wlog p >= q
# Result is a(B)b(B) x_t
{
if (length(b) == 1){polycoeff <- b[1]*array(a)}
else
{alpha <- array(a)
p <- dim(alpha) - 1
beta <- array(b)
q <- dim(beta) - 1
# Assumed: p >= q
polycoeff <- array(rep(0,p+q + 1))
for (k in 0:(p+q))
for (j in max(0,k-q):min(k,p))
{polycoeff[k+1] <- polycoeff[k+1] + alpha[j+1]*beta[k-j+1]}
}
return(filter(x,c(polycoeff),sides=1, method="convolution"))
# test: return(polycoeff)
}
elprice17 =  data.frame(read.csv("elspot-prices_2017_daily_eur.csv",sep=";",dec=","))
cons17= data.frame(read.csv("consumption-se-areas_2017_daily.csv",sep=";"))
prod17 = data.frame(read.csv("production-se-areas_2017_daily.csv",sep=";"))
Price = log(na_interpolation(as.numeric(elprice17[3:367,4]), option = "linear"))
Cons = log(na_interpolation(as.numeric(as.character(cons17[3:367,3])), option = "linear"))
Prod = log(na_interpolation(as.numeric(as.character(prod17[3:367,3])), option = "linear"))
plot.ts(Price)
plot.ts(Cons)
plot.ts(Prod)
acf(Price)
acf(Cons)
acf(Prod)
dato <- seq(c(ISOdate(2017,1,1)), by = "days", length.out = 365)
data1 = data.frame(dato, Price, Cons, Prod)
Prod1= data1[,c(1,4)]
Cons1 = data1[,c(1,3)]
Price1 = data1[,c(1,2)]
sprod = glm(Prod1[,2] ~ time(Prod1[,1]) +
I(time(Prod1[,1])^2) +
sin((2*pi)/365*I(time(Prod1[,1])))+
cos((2*pi)/365*I(time(Prod1[,1])))+
sin((4*pi)/365*I(time(Prod1[,1])))+
cos((4*pi)/365*I(time(Prod1[,1])))+
sin((8*pi)/365*I(time(Prod1[,1])))+
cos((8*pi)/365*I(time(Prod1[,1])))+
sin((24*pi)/365*I(time(Prod1[,1])))+
cos((24*pi)/365*I(time(Prod1[,1])))+
sin((104*pi)/365*I(time(Prod1[,1])))+
cos((104*pi)/365*I(time(Prod1[,1])))+
sin((730*pi)/365*I(time(Prod1[,1])))+
cos((730*pi)/365*I(time(Prod1[,1])))
)
sprice = glm(Price1[,2] ~ time(Price1[,1]) +
I(time(Price1[,1])^2) +
sin((2*pi)/365*I(time(Price1[,1])))+
cos((2*pi)/365*I(time(Price1[,1])))+
sin((4*pi)/365*I(time(Price1[,1])))+
cos((4*pi)/365*I(time(Price1[,1])))+
sin((8*pi)/365*I(time(Price1[,1])))+
cos((8*pi)/365*I(time(Price1[,1])))+
sin((24*pi)/365*I(time(Price1[,1])))+
cos((24*pi)/365*I(time(Price1[,1])))+
sin((104*pi)/365*I(time(Price1[,1])))+
cos((104*pi)/365*I(time(Price1[,1])))+
sin((730*pi)/365*I(time(Price1[,1])))+
cos((730*pi)/365*I(time(Price1[,1])))
)
scons = glm(Cons1[,2] ~ time(Cons1[,1]) +
I(time(Cons1[,1])^2) +
sin((2*pi)/365*I(time(Cons1[,1])))+
cos((2*pi)/365*I(time(Cons1[,1])))+
sin((4*pi)/365*I(time(Cons1[,1])))+
cos((4*pi)/365*I(time(Cons1[,1])))+
sin((8*pi)/365*I(time(Cons1[,1])))+
cos((8*pi)/365*I(time(Cons1[,1])))+
sin((24*pi)/365*I(time(Cons1[,1])))+
cos((24*pi)/365*I(time(Cons1[,1])))+
sin((104*pi)/365*I(time(Cons1[,1])))+
cos((104*pi)/365*I(time(Cons1[,1])))+
sin((730*pi)/365*I(time(Cons1[,1])))+
cos((730*pi)/365*I(time(Cons1[,1])))
)
summary(sprod)
summary(scons)
summary(sprice)
sprod_res = as.ts(sprod$residuals)
sprice_res = as.ts(sprice$residuals)
scons_res = as.ts(scons$residuals)
acf2(sprod_res)
acf2(diff(sprod_res,1))
acf2(diff(sprod_res,24))
acf2(diff(diff(sprod_res,1),24))
seas_sprod_res = sarima(sprod_res,3,0,0,2,0,0,7, no.constant = TRUE)
seas_sprod_res$AIC #-3.553287
seas_x1res= ts(seas_sprod_res$fit$residuals)
acf2(seas_x1res)
adf.test(seas_x1res) # stationær
coefs_x1 <- seas_sprod_res$fit$coef
print(coefs_x1)
coefs_saeson_Phi_x1 <- c(1,rep(0,5),-coefs_x1[4:5])
coefs_saeson_Phi_x1
# (1-Phi*B^24)*(1-B)x_1t = stationær AR(3) proces :
stat_x1 <- polymult(sprod_res,coefs_saeson_Phi_x1,1)
acf2(stat_x1)
qqPlot(seas_sprod_res$fit$residuals, ylab = "sprod residualer", xlab = "Norm Quantiles")
acf(seas_sprod_res$fit$residuals)
LBQPlot(seas_sprod_res$fit$residuals)
acf2(sprice_res)
seas_sprice_res = sarima(sprice_res,3,0,0,1,0,0,7, no.constant = TRUE)
seas_sprice_res$AIC #0.1526423
seas_y1res = ts(seas_sprice_res$fit$residuals)
acf2(seas_y1res)
adf.test(seas_y1res) # stationær
coefs_y1 <- seas_sprice_res$fit$coef
print(coefs_y1)
coefs_saeson_Phi_y1 <- c(1,rep(0,6),-coefs_y1[4])
coefs_saeson_Phi_y1
# (1-Phi*B^24)*(1-B)x_1t = stationær AR(3) proces :
stat_y1 <- polymult(sprice_res,coefs_saeson_Phi_y1,1)
acf2(stat_y1)
qqPlot(seas_sprice_res$fit$residuals, ylab = "sprice residualer", xlab = "Norm Quantiles")
acf(seas_y1res)
LBQPlot(seas_y1res)
acf2(scons_res)
seas_scons_res = sarima(scons_res,1,0,0,1,0,0,7, no.constant = TRUE)
seas_scons_res$AIC #-4.965997
seas_z1res = ts(seas_scons_res$fit$residuals)
acf2(seas_z1res)
adf.test(seas_z1res) # stationær
coefs_z1 <- seas_scons_res$fit$coef
print(coefs_z1)
coefs_saeson_Phi_z1 <- c(1,rep(0,6),-coefs_z1[2])
coefs_saeson_Phi_z1
# (1-Phi*B^24)*(1-B)x_1t = stationær AR(3) proces :
stat_z1 <- polymult(scons_res,coefs_saeson_Phi_z1,1)
acf2(stat_z1)
qqPlot(seas_scons_res$fit$residuals, ylab = "scons residualer", xlab = "Norm Quantiles")
acf(seas_z1res)
LBQPlot(seas_z1res)
plot(stat_y1)
plot(stat_x1)
plot(stat_z1)
XXX = data.frame(stat_z1,stat_x1,stat_y1)[8:365,]
var_xx = VAR(XXX, lag.max = 8)
VARselect(XXX)
summary(var_xx)
var = restrict(var_xx, method = "ser")
summary(var)
roots(var)
stability(var)
causality(var, cause = "stat_y1")
causality(var, cause = "stat_x1")
causality(var, cause = "stat_z1")
irf = irf(var, ortho = TRUE)
plot(irf)
serial.test(var, type = "BG") #Der er ikke seriekorrelation
arch.test(var) #  Fejlledene er  homoskedastiske
normality.test(var) #  Residualerne er ikke normalfordelte
amat = diag(3)
diag(amat) = NA
amat[2,1] = NA
amat[3,1] = NA
amat[3,2] = NA
amat
bmat = diag(3)
diag(bmat) = NA
svar = SVAR(var, Amat= amat, estmethod = "direct")
svar$Sigma.U
svar$A
svar$A %*% svar$Sigma.U %*% t(svar$A)
summary(svar)
irf_svar = irf(svar)
plot(irf_svar)
