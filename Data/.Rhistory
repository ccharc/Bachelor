PRICE15 = dfp15[747:8763,4]
PRICE16 = dfp16[3:8787,4]
PRICE17 = dfp17[3:8763,4]
PRICE18 = dfp18[3:8763,4]
SE1price= c(PRICE15,PRICE16,PRICE17,PRICE18)
#FORBRUG
dfc15 = data.frame(cons15)
dfc16 = data.frame(cons16)
dfc17 = data.frame(cons17)
dfc18 = data.frame(cons18)
CONS15 = dfc15[747:8763,3]
CONS16 = dfc16[3:8787,3]
CONS17 = dfc17[3:8763,3]
CONS18 = dfc18[3:8763,3]
SE1cons = c(CONS15,CONS16,CONS17,CONS18)
#VINDPRODUKTION
dfw15 = data.frame(wind15)
dfw16 = data.frame(wind16)
dfw17 = data.frame(wind17)
dfw18 = data.frame(wind18)
WIND15 = dfw15[747:8763,3]
WIND16 = dfw16[3:8787,3]
WIND17 = dfw17[3:8763,3]
WIND18 = dfw18[3:8763,3]
SE1wind = c(WIND15,WIND16,WIND17,WIND18)
#DATA
data = data.frame(SE1price,SE1cons,SE1wind)
windseries = ts(SE1wind)
consseries = ts(SE1cons)
priceseries= ts(SE1price)
plot.ts(priceseries)
mod1 = lm(SE1price ~ SE1cons)
summary(mod1)
install.packages("vars")
library(vars)
library(vars)
var(SE1price~SE1wind)
mod1=var(SE1price~SE1wind)
mod1 = var(SE1price ~ SE1cons, SE1wind)
mod1 = var(SE1price ~ SE1cons, SE1wind, is.atomic(SE1cons)=TRUE)
mod1 = var(SE1price ~ SE1cons, SE1wind, is.atomic(SE1cons) = TRUE)
mod1 = var(SE1price ~ SE1cons, SE1wind)
WIND15 = c(dfw15[747:8763,3])
View(WIND15)
WIND15
WIND16
dfp15 = data.frame(elprice15)
dfp16 = data.frame(elprice16)
dfp17 = data.frame(elprice17)
dfp18 = data.frame(elprice18)
PRICE15 = c(dfp15[747:8763,4])
PRICE16 = c(dfp16[3:8787,4])
PRICE17 = c(dfp17[3:8763,4])
PRICE18 = c(dfp18[3:8763,4])
SE1price= c(PRICE15,PRICE16,PRICE17,PRICE18)
#FORBRUG
dfc15 = data.frame(cons15)
dfc16 = data.frame(cons16)
dfc17 = data.frame(cons17)
dfc18 = data.frame(cons18)
CONS15 = c(dfc15[747:8763,3])
CONS16 = c(dfc16[3:8787,3])
CONS17 = c(dfc17[3:8763,3])
CONS18 = c(dfc18[3:8763,3])
SE1cons = c(CONS15,CONS16,CONS17,CONS18)
#VINDPRODUKTION
dfw15 = data.frame(wind15)
dfw16 = data.frame(wind16)
dfw17 = data.frame(wind17)
dfw18 = data.frame(wind18)
WIND15 = c(dfw15[747:8763,3])
WIND16 = c(dfw16[3:8787,3])
WIND17 = c(dfw17[3:8763,3])
WIND18 = c(dfw18[3:8763,3])
SE1wind = c(WIND15,WIND16,WIND17,WIND18)
#DATA
data = data.frame(SE1price,SE1cons,SE1wind)
windseries = ts(SE1wind)
consseries = ts(SE1cons)
priceseries= ts(SE1price)
plot.ts(priceseries)
library(vars)
mod1 = var(SE1price ~ SE1cons, SE1wind)
mod1 = var(SE1price ~ SE1cons, SE1wind)
mod1 = var(SE1price ~ SE1cons, SE1wind)
plot.ts(priceseries)
windseries = ts(SE1wind)
consseries = ts(SE1cons)
priceseries= ts(SE1price)
plot.ts(priceseries)
mean(priceseries)
mean(SE1price)
plot.ts(windseries)
plot.ts(consseries)
# Koefficientudregning af S(t)
scoef = function(fit){
coef = as.numeric(fit$coefficients)
cm = vcov(fit)
# Koefficienter til årlig periode
c1  = sqrt(coef[4]^2 + coef[5]^2)
c2  = atan(coef[5]/coef[4]) * 365.25/(2*pi)
# Koefficienter til halvårlig periode
c3  = sqrt(coef[6]^2 + coef[7]^2)
c4  = atan(coef[7]/coef[6]) * 365.25/(8*pi)
# Koefficienter til kvartal periode
c5  = sqrt(coef[8]^2 + coef[9]^2)
c6  = atan(coef[9]/coef[8]) * 365.25/(24*pi)
# Koefficienter til månedlig periode
c7 = sqrt(coef[10]^2 + coef[11]^2)
c8 = atan(coef[11]/coef[10]) * 365.25/(24*pi)
#Koefficienter til ugentlig periode
c9 = sqrt(coef[12]^2 + coef[13]^2)
c10 = atan(coef[13]/coef[12]) * 365.25/(24*pi)
#Koefficienter til daglig periode
c9 = sqrt(coef[14]^2 + coef[15]^2)
c10 = atan(coef[15]/coef[14]) * 365.25/(24*pi)
# Standardafvigelser til årlig periode
sdc1 = sqrt( 1/(coef[4]^2 + coef[5]^2)*(coef[4]^2 * cm[4,4] + coef[5]^2*cm[5,5] + coef[4]*coef[5] * 2*cm[4,5]) )
sdc2 = sqrt( (365.25/( 2*pi*(coef[4]^2 + coef[5]^2) ) )^2 * ( coef[5]^2 * cm[4,4] + coef[4]^2 * cm[5,5] - 2*coef[4]*coef[5]*cm[4,5])  )
# Standardafvigelser til halvårlig periode
sdc3 = sqrt( 1/(coef[6]^2 + coef[7]^2)*(coef[6]^2 * cm[6,6] + coef[7]^2*cm[7,7] + coef[6]*coef[7] * 2*cm[6,7]) )
sdc4 = sqrt( (365.25/( 2*pi*(coef[6]^2 + coef[7]^2) ) )^2 * ( coef[7]^2 * cm[6,6] + coef[6]^2 * cm[7,7] - 2*coef[6]*coef[7]*cm[6,7])  )
# Standardafvigelser til kvartal periode
sdc5 = sqrt( 1/(coef[8]^2 + coef[9]^2)*(coef[8]^2 * cm[8,8] + coef[9]^2*cm[9,9] + coef[8]*coef[9] * 2*cm[8,9]) )
sdc6 = sqrt( (365.25/( 2*pi*(coef[8]^2 + coef[9]^2) ) )^2 * ( coef[9]^2 * cm[8,8] + coef[8]^2 * cm[9,9] - 2*coef[8]*coef[9]*cm[8,9])  )
# Standardafvigelse til månedlig periode
sdc7 = sqrt( 1/(coef[10]^2 + coef[11]^2)*(coef[10]^2 * cm[10,10] + coef[11]^2*cm[11,11] + coef[10]*coef[11] * 2*cm[10,11]) )
sdc8 = sqrt( (365.25/( 2*pi*(coef[10]^2 + coef[11]^2) ) )^2 * ( coef[11]^2 * cm[10,10] + coef[10]^2 * cm[11,11] - 2*coef[10]*coef[11]*cm[10,11])  )
#Standardafvigelse til ugentlig periode
sdc9 = sqrt( 1/(coef[12]^2 + coef[13]^2)*(coef[12]^2 * cm[12,12] + coef[13]^2*cm[13,13] + coef[12]*coef[13] * 2*cm[12,13]) )
sdc10 = sqrt( (365.25/( 2*pi*(coef[12]^2 + coef[13]^2) ) )^2 * ( coef[13]^2 * cm[12,12] + coef[12]^2 * cm[13,13] - 2*coef[12]*coef[5]*cm[12,13])  )
#Standardafvigelse til daglig periode
sdc11 = sqrt( 1/(coef[14]^2 + coef[15]^2)*(coef[14]^2 * cm[14,14] + coef[5]^2*cm[15,15] + coef[14]*coef[15] * 2*cm[14,15]) )
sdc12 = sqrt( (365.25/( 2*pi*(coef[14]^2 + coef[15]^2) ) )^2 * ( coef[15]^2 * cm[14,14] + coef[14]^2 * cm[15,15] - 2*coef[14]*coef[15]*cm[14,15])  )
}
# Dataframe med alt info
ls <- list( coef = data.frame(b0 = coef[1] , b1 = coef[2] , b2 = coef[3] , c1 = c1 , c2 = c2 ,
c3 = c3 , c4 = c4 , c5 = c5 , c6 = c6 , c7 = c7 , c8 = c8 , c9 = c9 , c10 = c10 ,
d1 = coef[16] #evt helligdag
sdc  = data.frame(b0 = sqrt(cm[1,1]) , b1 = sqrt(cm[2,2]) , b2 = sqrt(cm[3,3]) ,
c1 = sdc1 , c2 = sdc2 , c3 = sdc3 , c4 = sdc4 , c5 = sdc5 , c6 = sdc6 , c7 =sdc7 ,
c8 = sdc8 , c9 = sdc9 , c10 = sdc10 , c11 = sdc11 , c12 = sdc12 ,
d1 = sqrt(cm[16,16]) #evt helligdag  ) )
return(ls)
# Koefficientudregning af S(t)
scoef = function(fit){
coef = as.numeric(fit$coefficients)
cm = vcov(fit)
# Koefficienter til årlig periode
c1  = sqrt(coef[4]^2 + coef[5]^2)
c2  = atan(coef[5]/coef[4]) * 365.25/(2*pi)
# Koefficienter til halvårlig periode
c3  = sqrt(coef[6]^2 + coef[7]^2)
c4  = atan(coef[7]/coef[6]) * 365.25/(8*pi)
# Koefficienter til kvartal periode
c5  = sqrt(coef[8]^2 + coef[9]^2)
c6  = atan(coef[9]/coef[8]) * 365.25/(24*pi)
# Koefficienter til månedlig periode
c7 = sqrt(coef[10]^2 + coef[11]^2)
c8 = atan(coef[11]/coef[10]) * 365.25/(24*pi)
#Koefficienter til ugentlig periode
c9 = sqrt(coef[12]^2 + coef[13]^2)
c10 = atan(coef[13]/coef[12]) * 365.25/(24*pi)
#Koefficienter til daglig periode
c9 = sqrt(coef[14]^2 + coef[15]^2)
c10 = atan(coef[15]/coef[14]) * 365.25/(24*pi)
# Standardafvigelser til årlig periode
sdc1 = sqrt( 1/(coef[4]^2 + coef[5]^2)*(coef[4]^2 * cm[4,4] + coef[5]^2*cm[5,5] + coef[4]*coef[5] * 2*cm[4,5]) )
sdc2 = sqrt( (365.25/( 2*pi*(coef[4]^2 + coef[5]^2) ) )^2 * ( coef[5]^2 * cm[4,4] + coef[4]^2 * cm[5,5] - 2*coef[4]*coef[5]*cm[4,5])  )
# Standardafvigelser til halvårlig periode
sdc3 = sqrt( 1/(coef[6]^2 + coef[7]^2)*(coef[6]^2 * cm[6,6] + coef[7]^2*cm[7,7] + coef[6]*coef[7] * 2*cm[6,7]) )
sdc4 = sqrt( (365.25/( 2*pi*(coef[6]^2 + coef[7]^2) ) )^2 * ( coef[7]^2 * cm[6,6] + coef[6]^2 * cm[7,7] - 2*coef[6]*coef[7]*cm[6,7])  )
# Standardafvigelser til kvartal periode
sdc5 = sqrt( 1/(coef[8]^2 + coef[9]^2)*(coef[8]^2 * cm[8,8] + coef[9]^2*cm[9,9] + coef[8]*coef[9] * 2*cm[8,9]) )
sdc6 = sqrt( (365.25/( 2*pi*(coef[8]^2 + coef[9]^2) ) )^2 * ( coef[9]^2 * cm[8,8] + coef[8]^2 * cm[9,9] - 2*coef[8]*coef[9]*cm[8,9])  )
# Standardafvigelse til månedlig periode
sdc7 = sqrt( 1/(coef[10]^2 + coef[11]^2)*(coef[10]^2 * cm[10,10] + coef[11]^2*cm[11,11] + coef[10]*coef[11] * 2*cm[10,11]) )
sdc8 = sqrt( (365.25/( 2*pi*(coef[10]^2 + coef[11]^2) ) )^2 * ( coef[11]^2 * cm[10,10] + coef[10]^2 * cm[11,11] - 2*coef[10]*coef[11]*cm[10,11])  )
#Standardafvigelse til ugentlig periode
sdc9 = sqrt( 1/(coef[12]^2 + coef[13]^2)*(coef[12]^2 * cm[12,12] + coef[13]^2*cm[13,13] + coef[12]*coef[13] * 2*cm[12,13]) )
sdc10 = sqrt( (365.25/( 2*pi*(coef[12]^2 + coef[13]^2) ) )^2 * ( coef[13]^2 * cm[12,12] + coef[12]^2 * cm[13,13] - 2*coef[12]*coef[5]*cm[12,13])  )
#Standardafvigelse til daglig periode
sdc11 = sqrt( 1/(coef[14]^2 + coef[15]^2)*(coef[14]^2 * cm[14,14] + coef[5]^2*cm[15,15] + coef[14]*coef[15] * 2*cm[14,15]) )
sdc12 = sqrt( (365.25/( 2*pi*(coef[14]^2 + coef[15]^2) ) )^2 * ( coef[15]^2 * cm[14,14] + coef[14]^2 * cm[15,15] - 2*coef[14]*coef[15]*cm[14,15])  )
}
# Koefficientudregning af S(t)
scoef = function(fit){
coef = as.numeric(fit$coefficients)
cm = vcov(fit)
# Koefficienter til årlig periode
c1  = sqrt(coef[4]^2 + coef[5]^2)
c2  = atan(coef[5]/coef[4]) * 365.25/(2*pi)
# Koefficienter til halvårlig periode
c3  = sqrt(coef[6]^2 + coef[7]^2)
c4  = atan(coef[7]/coef[6]) * 365.25/(8*pi)
# Koefficienter til kvartal periode
c5  = sqrt(coef[8]^2 + coef[9]^2)
c6  = atan(coef[9]/coef[8]) * 365.25/(24*pi)
# Koefficienter til månedlig periode
c7 = sqrt(coef[10]^2 + coef[11]^2)
c8 = atan(coef[11]/coef[10]) * 365.25/(24*pi)
#Koefficienter til ugentlig periode
c9 = sqrt(coef[12]^2 + coef[13]^2)
c10 = atan(coef[13]/coef[12]) * 365.25/(24*pi)
#Koefficienter til daglig periode
c9 = sqrt(coef[14]^2 + coef[15]^2)
c10 = atan(coef[15]/coef[14]) * 365.25/(24*pi)
# Standardafvigelser til årlig periode
sdc1 = sqrt( 1/(coef[4]^2 + coef[5]^2)*(coef[4]^2 * cm[4,4] + coef[5]^2*cm[5,5] + coef[4]*coef[5] * 2*cm[4,5]) )
sdc2 = sqrt( (365.25/( 2*pi*(coef[4]^2 + coef[5]^2) ) )^2 * ( coef[5]^2 * cm[4,4] + coef[4]^2 * cm[5,5] - 2*coef[4]*coef[5]*cm[4,5])  )
# Standardafvigelser til halvårlig periode
sdc3 = sqrt( 1/(coef[6]^2 + coef[7]^2)*(coef[6]^2 * cm[6,6] + coef[7]^2*cm[7,7] + coef[6]*coef[7] * 2*cm[6,7]) )
sdc4 = sqrt( (365.25/( 2*pi*(coef[6]^2 + coef[7]^2) ) )^2 * ( coef[7]^2 * cm[6,6] + coef[6]^2 * cm[7,7] - 2*coef[6]*coef[7]*cm[6,7])  )
# Standardafvigelser til kvartal periode
sdc5 = sqrt( 1/(coef[8]^2 + coef[9]^2)*(coef[8]^2 * cm[8,8] + coef[9]^2*cm[9,9] + coef[8]*coef[9] * 2*cm[8,9]) )
sdc6 = sqrt( (365.25/( 2*pi*(coef[8]^2 + coef[9]^2) ) )^2 * ( coef[9]^2 * cm[8,8] + coef[8]^2 * cm[9,9] - 2*coef[8]*coef[9]*cm[8,9])  )
# Standardafvigelse til månedlig periode
sdc7 = sqrt( 1/(coef[10]^2 + coef[11]^2)*(coef[10]^2 * cm[10,10] + coef[11]^2*cm[11,11] + coef[10]*coef[11] * 2*cm[10,11]) )
sdc8 = sqrt( (365.25/( 2*pi*(coef[10]^2 + coef[11]^2) ) )^2 * ( coef[11]^2 * cm[10,10] + coef[10]^2 * cm[11,11] - 2*coef[10]*coef[11]*cm[10,11])  )
#Standardafvigelse til ugentlig periode
sdc9 = sqrt( 1/(coef[12]^2 + coef[13]^2)*(coef[12]^2 * cm[12,12] + coef[13]^2*cm[13,13] + coef[12]*coef[13] * 2*cm[12,13]) )
sdc10 = sqrt( (365.25/( 2*pi*(coef[12]^2 + coef[13]^2) ) )^2 * ( coef[13]^2 * cm[12,12] + coef[12]^2 * cm[13,13] - 2*coef[12]*coef[5]*cm[12,13])  )
#Standardafvigelse til daglig periode
sdc11 = sqrt( 1/(coef[14]^2 + coef[15]^2)*(coef[14]^2 * cm[14,14] + coef[5]^2*cm[15,15] + coef[14]*coef[15] * 2*cm[14,15]) )
sdc12 = sqrt( (365.25/( 2*pi*(coef[14]^2 + coef[15]^2) ) )^2 * ( coef[15]^2 * cm[14,14] + coef[14]^2 * cm[15,15] - 2*coef[14]*coef[15]*cm[14,15])  )
}
# Dataframe med alt info
ls <- list( coef = data.frame(b0 = coef[1] , b1 = coef[2] , b2 = coef[3] , c1 = c1 , c2 = c2 ,
c3 = c3 , c4 = c4 , c5 = c5 , c6 = c6 , c7 = c7 , c8 = c8 , c9 = c9 , c10 = c10 ,
#d1 = coef[16] #evt helligdag
sdc  = data.frame(b0 = sqrt(cm[1,1]) , b1 = sqrt(cm[2,2]) , b2 = sqrt(cm[3,3]) ,
c1 = sdc1 , c2 = sdc2 , c3 = sdc3 , c4 = sdc4 , c5 = sdc5 , c6 = sdc6 , c7 =sdc7 ,
c8 = sdc8 , c9 = sdc9 , c10 = sdc10 , c11 = sdc11 , c12 = sdc12 ,
#d1 = sqrt(cm[16,16]) #evt helligdag  ) )
# Dataframe med alt info
ls <- list( coef = data.frame(b0 = coef[1] , b1 = coef[2] , b2 = coef[3] , c1 = c1 , c2 = c2 ,
c3 = c3 , c4 = c4 , c5 = c5 , c6 = c6 , c7 = c7 , c8 = c8 , c9 = c9 , c10 = c10 ,
#d1 = coef[16] #evt helligdag
)
sdc  = data.frame(b0 = sqrt(cm[1,1]) , b1 = sqrt(cm[2,2]) , b2 = sqrt(cm[3,3]) ,
c1 = sdc1 , c2 = sdc2 , c3 = sdc3 , c4 = sdc4 , c5 = sdc5 , c6 = sdc6 , c7 =sdc7 ,
c8 = sdc8 , c9 = sdc9 , c10 = sdc10 , c11 = sdc11 , c12 = sdc12 ,
#d1 = sqrt(cm[16,16]) #evt helligdag  )
)
# Dataframe med alt info
ls <- list( coef = data.frame(b0 = coef[1] , b1 = coef[2] , b2 = coef[3] , c1 = c1 , c2 = c2 ,
# Dataframe med alt info
ls <- list( coef = data.frame(b0 = coef[1] , b1 = coef[2] , b2 = coef[3] , c1 = c1 , c2 = c2 ,
#d1 = coef[16] #evt helligdag
c1 = sdc1 , c2 = sdc2 , c3 = sdc3 , c4 = sdc4 , c5 = sdc5 , c6 = sdc6 , c7 =sdc7 ,
#d1 = sqrt(cm[16,16]) #evt helligdag  )
c8 = sdc8 , c9 = sdc9 , c10 = sdc10 , c11 = sdc11 , c12 = sdc12
# Dataframe med alt info
ls = list( coef = data.frame(b0 = coef[1] , b1 = coef[2] , b2 = coef[3] , c1 = c1 , c2 = c2 ,
# Dataframe med alt info
ls = list( coef = data.frame(b0 = coef[1] , b1 = coef[2] , b2 = coef[3] , c1 = c1 , c2 = c2 ,
# Dataframe med alt info
ls = list( coef = data.frame(b0 = coef[1] , b1 = coef[2] , b2 = coef[3] , c1 = c1 , c2 = c2 , c3 = c3 , c4 = c4 , c5 = c5 , c6 = c6 , c7 = c7 , c8 = c8 , c9 = c9 , c10 = c10 , sdc  = data.frame(b0 = sqrt(cm[1,1]) , b1 = sqrt(cm[2,2]) , b2 = sqrt(cm[3,3]) , c1 = sdc1 , c2 = sdc2 , c3 = sdc3 , c4 = sdc4 , c5 = sdc5 , c6 = sdc6 , c7 =sdc7 , c8 = sdc8 , c9 = sdc9 , c10 = sdc10 , c11 = sdc11 , c12 = sdc12 )
# Dataframe med alt info
ls = list( coef = data.frame(b0 = coef[1] , b1 = coef[2] , b2 = coef[3] , c1 = c1 , c2 = c2 , c3 = c3 , c4 = c4 , c5 = c5 , c6 = c6 , c7 = c7 , c8 = c8 , c9 = c9 , c10 = c10 , sdc  = data.frame(b0 = sqrt(cm[1,1]) , b1 = sqrt(cm[2,2]) , b2 = sqrt(cm[3,3]) , c1 = sdc1 , c2 = sdc2 , c3 = sdc3 , c4 = sdc4 , c5 = sdc5 , c6 = sdc6 , c7 =sdc7 , c8 = sdc8 , c9 = sdc9 , c10 = sdc10 , c11 = sdc11 , c12 = sdc12 ,)
# Dataframe med alt info
ls = list( coef = data.frame(b0 = coef[1] , b1 = coef[2] , b2 = coef[3] , c1 = c1 , c2 = c2 , c3 = c3 , c4 = c4 , c5 = c5 , c6 = c6 , c7 = c7 , c8 = c8 , c9 = c9 , c10 = c10 , sdc  = data.frame(b0 = sqrt(cm[1,1]) , b1 = sqrt(cm[2,2]) , b2 = sqrt(cm[3,3]) , c1 = sdc1 , c2 = sdc2 , c3 = sdc3 , c4 = sdc4 , c5 = sdc5 , c6 = sdc6 , c7 =sdc7 , c8 = sdc8 , c9 = sdc9 , c10 = sdc10 , c11 = sdc11 , c12 = sdc12 ))
# Dataframe med alt info
ls = list( coef = data.frame(b0 = coef[1] , b1 = coef[2] , b2 = coef[3] , c1 = c1 , c2 = c2 , c3 = c3 , c4 = c4 ,
# Dataframe med alt info
ls = list( coef = data.frame(b0 = coef[1] , b1 = coef[2] , b2 = coef[3] , c1 = c1 , c2 = c2 , c3 = c3 , c4 = c4 ,
c5 = c5 , c6 = c6 , c7 = c7 , c8 = c8 , c9 = c9 , c10 = c10 ,
sdc  = data.frame(b0 = sqrt(cm[1,1]) , b1 = sqrt(cm[2,2]) , b2 = sqrt(cm[3,3]) ,
c1 = sdc1 , c2 = sdc2 , c3 = sdc3 , c4 = sdc4 , c5 = sdc5 , c6 = sdc6 ,
c7 =sdc7 , c8 = sdc8 , c9 = sdc9 , c10 = sdc10 , c11 = sdc11 , c12 = sdc12 ))
e
View(ls)
rm(list=ls())
# Dataframe med alt info
ls = list( coef = data.frame(b0 = coef[1] , b1 = coef[2] , b2 = coef[3] , c1 = c1 , c2 = c2 , c3 = c3 , c4 = c4 ,
c5 = c5 , c6 = c6 , c7 = c7 , c8 = c8 , c9 = c9 , c10 = c10 )),
sdc  = data.frame(b0 = sqrt(cm[1,1]) , b1 = sqrt(cm[2,2]) , b2 = sqrt(cm[3,3]) ,
c1 = sdc1 , c2 = sdc2 , c3 = sdc3 , c4 = sdc4 , c5 = sdc5 , c6 = sdc6 ,
c7 =sdc7 , c8 = sdc8 , c9 = sdc9 , c10 = sdc10 , c11 = sdc11 , c12 = sdc12 )
# Dataframe med alt info
ls = list( coef = data.frame(b0 = coef[1] , b1 = coef[2] , b2 = coef[3] , c1 = c1 , c2 = c2 , c3 = c3 , c4 = c4 ,
c5 = c5 , c6 = c6 , c7 = c7 , c8 = c8 , c9 = c9 , c10 = c10 ),
sdc  = data.frame(b0 = sqrt(cm[1,1]) , b1 = sqrt(cm[2,2]) , b2 = sqrt(cm[3,3]) ,
c1 = sdc1 , c2 = sdc2 , c3 = sdc3 , c4 = sdc4 , c5 = sdc5 , c6 = sdc6 ,
c7 =sdc7 , c8 = sdc8 , c9 = sdc9 , c10 = sdc10 , c11 = sdc11 , c12 = sdc12 ))
setwd("~/Bachelorprojekt/Bachelor/Bachelor/Bachelor/Data")
library(readxl)
library(vars)
elprice15 = data.frame(read.csv("elspot-prices_2015_hourly_eur.csv",sep=";"))
elprice16 = data.frame(read.csv("elspot-prices_2016_hourly_eur.csv",sep=";"))
elprice17 = data.frame(read.csv("elspot-prices_2017_hourly_eur.csv",sep=";"))
elprice18 = data.frame(read.csv("elspot-prices_2018_hourly_eur.csv",sep=";"))
cons15 = data.frame(read.csv("consumption-se-areas_2015_hourly.csv",sep=";"))
cons16 = data.frame(read.csv("consumption-se-areas_2016_hourly.csv",sep=";"))
cons17 = data.frame(read.csv("consumption-se-areas_2017_hourly.csv",sep=";"))
cons18 = data.frame(read.csv("consumption-se-areas_2018_hourly.csv",sep=";"))
wind15 = data.frame(read.csv("wind-power-se_2015_hourly.csv",sep=";"))
wind16 = data.frame(read.csv("wind-power-se_2016_hourly.csv",sep=";"))
wind17 = data.frame(read.csv("wind-power-se_2017_hourly.csv",sep=";"))
wind18 = data.frame(read.csv("wind-power-se_2018_hourly.csv",sep=";"))
#DATOER
#TIMER
#HOURS15 = dfp15[747:8763,2]
#HOURS16 = dfp16[3:8787,2]
#HOURS17 = dfp17[3:8763,2]
#HOURS18 = dfp18[3:8763,2]
#Hours = c(HOURS15,HOURS16,HOURS17,HOURS18)
#PRISER
PRICE15 = elprice15[554:8763,4]
PRICE16 = elprice16[3:8787,4]
PRICE17 = elprice17[3:8763,4]
PRICE18 = elprice18[3:6290,4]
SE1price= c(PRICE15,PRICE16,PRICE17,PRICE18)
dfprice  = data.frame(SE1price)
#FORBRUG
CONS15 = cons15[554:8763,3]
CONS16 = cons16[3:8787,3]
CONS17 = cons17[3:8763,3]
CONS18 = cons18[3:6290,3]
SE1cons = c(CONS15,CONS16,CONS17,CONS18)
dfcons = data.frame(SE1cons)
#VINDPRODUKTION
WIND15 = wind15[554:8763,3]
WIND16 = wind16[3:8787,3]
WIND17 = wind17[3:8763,3]
WIND18 = wind18[3:6290,3]
SE1wind =c(WIND15,WIND16,WIND17,WIND18)
#DATO
#dato15 = elprice15[554:8763,1]
#dato16 = elprice16[3:8787,1]
#dato17 = elprice17[3:8763,1]
#dato18 = elprice18[3:6290,1]
#dato = c(dato15,dato16,dato17,dato18)
#DATA
data = data.frame(SE1price,SE1cons,SE1wind)
windseries = ts(SE1wind)
consseries = ts(SE1cons)
priceseries= ts(SE1price)
plot.ts(priceseries)
plot.ts(windseries)
plot.ts(consseries)
season = function(t,c1,c2){
s_t = c1 * (sin((t*2*pi)/365))+c2 * (cos((t*2*pi)/365))
}
fit = lm(SE1cons ~ c1 * (sin((t*2*pi)/365))+c2 * (cos((t*2*pi)/365)), data = data)
mod1 = lm(SE1price ~ SE1cons + SE1wind, data = data)
mod1
rm(list=ls())
# Koefficientudregning af S(t)
scoef = function(fit){
coef = as.numeric(fit$coefficients)
cm = vcov(fit)
# Koefficienter til årlig periode
c1  = sqrt(coef[4]^2 + coef[5]^2)
c2  = atan(coef[5]/coef[4]) * 365.25/(2*pi)
# Koefficienter til halvårlig periode
c3  = sqrt(coef[6]^2 + coef[7]^2)
c4  = atan(coef[7]/coef[6]) * 365.25/(8*pi)
# Koefficienter til kvartal periode
c5  = sqrt(coef[8]^2 + coef[9]^2)
c6  = atan(coef[9]/coef[8]) * 365.25/(24*pi)
# Koefficienter til månedlig periode
c7 = sqrt(coef[10]^2 + coef[11]^2)
c8 = atan(coef[11]/coef[10]) * 365.25/(24*pi)
#Koefficienter til ugentlig periode
c9 = sqrt(coef[12]^2 + coef[13]^2)
c10 = atan(coef[13]/coef[12]) * 365.25/(24*pi)
#Koefficienter til daglig periode
c9 = sqrt(coef[14]^2 + coef[15]^2)
c10 = atan(coef[15]/coef[14]) * 365.25/(24*pi)
# Standardafvigelser til årlig periode
sdc1 = sqrt( 1/(coef[4]^2 + coef[5]^2)*(coef[4]^2 * cm[4,4] + coef[5]^2*cm[5,5] + coef[4]*coef[5] * 2*cm[4,5]) )
sdc2 = sqrt( (365.25/( 2*pi*(coef[4]^2 + coef[5]^2) ) )^2 * ( coef[5]^2 * cm[4,4] + coef[4]^2 * cm[5,5] - 2*coef[4]*coef[5]*cm[4,5])  )
# Standardafvigelser til halvårlig periode
sdc3 = sqrt( 1/(coef[6]^2 + coef[7]^2)*(coef[6]^2 * cm[6,6] + coef[7]^2*cm[7,7] + coef[6]*coef[7] * 2*cm[6,7]) )
sdc4 = sqrt( (365.25/( 2*pi*(coef[6]^2 + coef[7]^2) ) )^2 * ( coef[7]^2 * cm[6,6] + coef[6]^2 * cm[7,7] - 2*coef[6]*coef[7]*cm[6,7])  )
# Standardafvigelser til kvartal periode
sdc5 = sqrt( 1/(coef[8]^2 + coef[9]^2)*(coef[8]^2 * cm[8,8] + coef[9]^2*cm[9,9] + coef[8]*coef[9] * 2*cm[8,9]) )
sdc6 = sqrt( (365.25/( 2*pi*(coef[8]^2 + coef[9]^2) ) )^2 * ( coef[9]^2 * cm[8,8] + coef[8]^2 * cm[9,9] - 2*coef[8]*coef[9]*cm[8,9])  )
# Standardafvigelse til månedlig periode
sdc7 = sqrt( 1/(coef[10]^2 + coef[11]^2)*(coef[10]^2 * cm[10,10] + coef[11]^2*cm[11,11] + coef[10]*coef[11] * 2*cm[10,11]) )
sdc8 = sqrt( (365.25/( 2*pi*(coef[10]^2 + coef[11]^2) ) )^2 * ( coef[11]^2 * cm[10,10] + coef[10]^2 * cm[11,11] - 2*coef[10]*coef[11]*cm[10,11])  )
#Standardafvigelse til ugentlig periode
sdc9 = sqrt( 1/(coef[12]^2 + coef[13]^2)*(coef[12]^2 * cm[12,12] + coef[13]^2*cm[13,13] + coef[12]*coef[13] * 2*cm[12,13]) )
sdc10 = sqrt( (365.25/( 2*pi*(coef[12]^2 + coef[13]^2) ) )^2 * ( coef[13]^2 * cm[12,12] + coef[12]^2 * cm[13,13] - 2*coef[12]*coef[5]*cm[12,13])  )
#Standardafvigelse til daglig periode
sdc11 = sqrt( 1/(coef[14]^2 + coef[15]^2)*(coef[14]^2 * cm[14,14] + coef[5]^2*cm[15,15] + coef[14]*coef[15] * 2*cm[14,15]) )
sdc12 = sqrt( (365.25/( 2*pi*(coef[14]^2 + coef[15]^2) ) )^2 * ( coef[15]^2 * cm[14,14] + coef[14]^2 * cm[15,15] - 2*coef[14]*coef[15]*cm[14,15])  )
}
# Dataframe med alt info
ls = list( coef = data.frame(b0 = coef[1] , b1 = coef[2] , b2 = coef[3] , c1 = c1 , c2 = c2 , c3 = c3 , c4 = c4 ,
c5 = c5 , c6 = c6 , c7 = c7 , c8 = c8 , c9 = c9 , c10 = c10 ),
sdc  = data.frame(b0 = sqrt(cm[1,1]) , b1 = sqrt(cm[2,2]) , b2 = sqrt(cm[3,3]) ,
c1 = sdc1 , c2 = sdc2 , c3 = sdc3 , c4 = sdc4 , c5 = sdc5 , c6 = sdc6 ,
c7 =sdc7 , c8 = sdc8 , c9 = sdc9 , c10 = sdc10 , c11 = sdc11 , c12 = sdc12 ))
fit = lm(SE1price ~ SE1cons + SE1wind, data = data)
library(readxl)
library(vars)
elprice15 = data.frame(read.csv("elspot-prices_2015_hourly_eur.csv",sep=";"))
elprice16 = data.frame(read.csv("elspot-prices_2016_hourly_eur.csv",sep=";"))
elprice17 = data.frame(read.csv("elspot-prices_2017_hourly_eur.csv",sep=";"))
elprice18 = data.frame(read.csv("elspot-prices_2018_hourly_eur.csv",sep=";"))
cons15 = data.frame(read.csv("consumption-se-areas_2015_hourly.csv",sep=";"))
cons16 = data.frame(read.csv("consumption-se-areas_2016_hourly.csv",sep=";"))
cons17 = data.frame(read.csv("consumption-se-areas_2017_hourly.csv",sep=";"))
cons18 = data.frame(read.csv("consumption-se-areas_2018_hourly.csv",sep=";"))
wind15 = data.frame(read.csv("wind-power-se_2015_hourly.csv",sep=";"))
wind16 = data.frame(read.csv("wind-power-se_2016_hourly.csv",sep=";"))
wind17 = data.frame(read.csv("wind-power-se_2017_hourly.csv",sep=";"))
wind18 = data.frame(read.csv("wind-power-se_2018_hourly.csv",sep=";"))
#DATOER
#TIMER
#HOURS15 = dfp15[747:8763,2]
#HOURS16 = dfp16[3:8787,2]
#HOURS17 = dfp17[3:8763,2]
#HOURS18 = dfp18[3:8763,2]
#Hours = c(HOURS15,HOURS16,HOURS17,HOURS18)
#PRISER
PRICE15 = elprice15[554:8763,4]
PRICE16 = elprice16[3:8787,4]
PRICE17 = elprice17[3:8763,4]
PRICE18 = elprice18[3:6290,4]
SE1price= c(PRICE15,PRICE16,PRICE17,PRICE18)
dfprice  = data.frame(SE1price)
#FORBRUG
CONS15 = cons15[554:8763,3]
CONS16 = cons16[3:8787,3]
CONS17 = cons17[3:8763,3]
CONS18 = cons18[3:6290,3]
SE1cons = c(CONS15,CONS16,CONS17,CONS18)
dfcons = data.frame(SE1cons)
#VINDPRODUKTION
WIND15 = wind15[554:8763,3]
WIND16 = wind16[3:8787,3]
WIND17 = wind17[3:8763,3]
WIND18 = wind18[3:6290,3]
SE1wind =c(WIND15,WIND16,WIND17,WIND18)
#DATO
#dato15 = elprice15[554:8763,1]
#dato16 = elprice16[3:8787,1]
#dato17 = elprice17[3:8763,1]
#dato18 = elprice18[3:6290,1]
#dato = c(dato15,dato16,dato17,dato18)
#DATA
data = data.frame(SE1price,SE1cons,SE1wind)
windseries = ts(SE1wind)
consseries = ts(SE1cons)
priceseries= ts(SE1price)
plot.ts(priceseries)
plot.ts(windseries)
plot.ts(consseries)
fit = lm(SE1price ~ SE1cons + SE1wind, data = data)
scoef(fit=fit)
scoef(fit)
View(cm)
scoef(fit = SE1wind)
cm
cm = vcov(fit)
cm
scoef(fit = SE1wind)
cm = vcov(fit)
cm
mod1 = ar(SE1cons)
mod1
scoef(fit = mod1)
mod1 = ar(SE1cons)
scoef(fit = mod1)
cm = vcov(mod1)
mod1 = arima(SE1cons)
mod1
scoef(fit = mod1)
scoef(data$SE1price)
scoef(data$SE1price')
cm = vcov(mod1)
cm
scoef(data$SE1price')
cm = vcov(mod1)
cm
mm = scoef(data$SE1price')
cm = vcov(mod1)
cm
vie
View(mm)
mm = scoef(data$SE1price')
cm = vcov(mod1)
cm
mm = scoef(data$t(SE1price))
pris=t(SE1price)
mm = scoef(pris)
mm = scoef(pris)
mm = scoef(pris)
mm = scoef(mod1)
cm = vcov(mod1)
cm
mm = scoef(fit)
cm = vcov(mod1)
cm
cm = vcov(fit)
cm = vcov(fit)
cm
fit = lm(SE1price ~ c1 + c2, data = data)
fit = lm(SE1price ~ SE1cons + SE1wind, data = data)
fit
summary(fit)
mod1
mod1 = ar(SE1cons)
mod1
cm = vcov(mod1)
cm = cov(mod1)
cm = cov(mod1$coefficients)
cm =(mod1$coefficients)
cm
